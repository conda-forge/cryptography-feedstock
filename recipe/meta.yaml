{% set version = "36.0.1" %}

package:
  name: cryptography
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/c/cryptography/cryptography-{{ version }}.tar.gz
  sha256: 53e5c1dc3d7a953de055d77bef2ff607ceef7a2aac0353b5d630ab67f7423638

build:
  number: 0
  skip: true  # [py<36]
  script:
    {% if build_platform != target_platform %}
    - export PYO3_CROSS_INCLUDE_DIR=$PREFIX/include
    - export PYO3_CROSS_LIB_DIR=$SP_DIR/../
    - export PYO3_CROSS_PYTHON_VERSION=$PY_VER
    {% endif %}
    - {{ PYTHON }} -m pip install . -vv

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - cffi >=1.12                            # [python_impl != "pypy" and build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ compiler('rust') }}
  host:
    - python
    - setuptools >=40.6.0
    - pip
    - setuptools-rust >=0.11.4
    - openssl
    - cffi >=1.12   # [python_impl != "pypy"]
  run:
    - python
    - openssl
    - cffi >=1.12   # [python_impl != "pypy"]

test:
  imports:
    - cryptography
    - cryptography.fernet
    - cryptography.hazmat
    - cryptography.hazmat.backends
    - cryptography.hazmat.backends.openssl
    - cryptography.hazmat.bindings
    - cryptography.hazmat.bindings.openssl
    - cryptography.hazmat.primitives
    - cryptography.hazmat.primitives.asymmetric
    - cryptography.hazmat.primitives.ciphers
    - cryptography.hazmat.primitives.kdf
    - cryptography.hazmat.primitives.twofactor
    - cryptography.x509
  requires:
    - cryptography-vectors {{ version }}
    - hypothesis
    - iso8601
    - pretend
    - pytest
    - pytest-subtests
    - pytz
  source_files:
    - tests
  commands:
    # run_test.py will check that the correct openssl version is linked
    - pytest

about:
  home: cryptography.io
  license: Apache-2.0 AND BSD-3-Clause AND PSF-2.0 AND MIT
  license_family: BSD
  license_file: LICENSE
  summary: cryptography is a package designed to expose cryptographic primitives and recipes to Python developers.
  description: |
    cryptography is a package which provides cryptographic recipes and
    primitives to Python developers. Our goal is for it to be your
    "cryptographic standard library". It supports Python 3.6+ and PyPy3 7.2+.
    cryptography includes both high level recipes and low level interfaces
    to common cryptographic algorithms such as symmetric ciphers, message
    digests, and key derivation functions..
  doc_url: http://cryptography.readthedocs.io/
  doc_source_url: https://github.com/pyca/cryptography/blob/master/docs/index.rst
  dev_url: https://github.com/pyca/cryptography

extra:
  recipe-maintainers:
    - jakirkham
    - ocefpaf
    - h-vetinari
